name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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

          certificate-password: 111111
          
          provisioning-profile-base64: MIIxBAYJKoZIhvcNAQcCoIIw9TCCMPECAQExCzAJBgUrDgMCGgUAMIIhEQYJKoZIhvcNAQcBoIIhAgSCIP48P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8IURPQ1RZUEUgcGxpc3QgUFVCTElDICItLy9BcHBsZS8vRFREIFBMSVNUIDEuMC8vRU4iICJodHRwOi8vd3d3LmFwcGxlLmNvbS9EVERzL1Byb3BlcnR5TGlzdC0xLjAuZHRkIj4KPHBsaXN0IHZlcnNpb249IjEuMCI+CjxkaWN0PgoJPGtleT5BcHBJRE5hbWU8L2tleT4KCTxzdHJpbmc+Y29tVFdXWjY3MkxXWTwvc3RyaW5nPgoJPGtleT5BcHBsaWNhdGlvbklkZW50aWZpZXJQcmVmaXg8L2tleT4KCTxhcnJheT4KCTxzdHJpbmc+VFdXWjY3MkxXWTwvc3RyaW5nPgoJPC9hcnJheT4KCTxrZXk+Q3JlYXRpb25EYXRlPC9rZXk+Cgk8ZGF0ZT4yMDI1LTA3LTAzVDAzOjQ3OjUwWjwvZGF0ZT4KCTxrZXk+UGxhdGZvcm08L2tleT4KCTxhcnJheT4KCQk8c3RyaW5nPmlPUzwvc3RyaW5nPgoJCTxzdHJpbmc+eHJPUzwvc3RyaW5nPgoJCTxzdHJpbmc+dmlzaW9uT1M8L3N0cmluZz4KCTwvYXJyYXk+Cgk8a2V5PklzWGNvZGVNYW5hZ2VkPC9rZXk+Cgk8ZmFsc2UvPgoJPGtleT5EZXZlbG9wZXJDZXJ0aWZpY2F0ZXM8L2tleT4KCTxhcnJheT4KCQk8ZGF0YT5NSUlGeFRDQ0JLMmdBd0lCQWdJUU44U3FVQmRnbmNpalRuMmVOeE5MVERBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSTFNRGN3TXpBek16TTBOMW9YRFRJMk1EY3dNekF6TXpNME5sb3dnWXN4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBVVjFkYU5qY3lURmRaTVRVd013WURWUVFEREN4QmNIQnNaU0JFYVhOMGNtbGlkWFJwYjI0NklITm9kWHBvYVNCM1lXNW5JQ2hVVjFkYU5qY3lURmRaS1RFVE1CRUdBMVVFQ3d3S1ZGZFhXalkzTWt4WFdURVVNQklHQTFVRUNnd0xjMmgxZW1ocElIZGhibWN4Q3pBSkJnTlZCQVlUQWtOT01JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMWl6d0FvWDZLYmFWSHRlelJaRXhSc1BUZkRoUjhpNkQ5NkJOZVYwQXdURlUxdEN4eXIrNWltK3AvNDZqeHovTU5tSjNQRmp3YU9pQklkVzUvUzgyMGpoV1ZQK3drbUJlRFB4d1VPMjhjRzk3M2F4ZUZBempEek9CM3Z3UUlEMWY4NXhQd2M4ckNDV3BaWkQrSWg5eUJCNm9hM0h3cmVCbWtFb1dnSHpZejhhUnFkaWlZeExnRGZIZ1FUdzZlTmdpSmsrRk5zVnJwU0QyTmtmbDRqcFl0TldVTFE5VjAycUhyTjRaL01pUHlvQVdQSmRjNkY0NkR4TVZZcEJDNjZRY1ptVlpGeHFXa3FwMmlVL2NudDhnMzBwNyt1VmJoREFnb0tlZXgvM25MYXV1a1NkQmlMdmVpTFVMRkUwUXJCb2pRa0lTcDUyeGkyeGdQL0FrNGF0cC93SURBUUFCbzRJQ09EQ0NBalF3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFKL3NBVmtQbXZaQXFTRXJrbUtHTU1sK3luc2pCd0JnZ3JCZ0VGQlFjQkFRUmtNR0l3TFFZSUt3WUJCUVVITUFLR0lXaDBkSEE2THk5alpYSjBjeTVoY0hCc1pTNWpiMjB2ZDNka2NtY3pMbVJsY2pBeEJnZ3JCZ0VGQlFjd0FZWWxhSFIwY0RvdkwyOWpjM0F1WVhCd2JHVXVZMjl0TDI5amMzQXdNeTEzZDJSeVp6TXdOVENDQVI0R0ExVWRJQVNDQVJVd2dnRVJNSUlCRFFZSktvWklodmRqWkFVQk1JSC9NSUhEQmdnckJnRUZCUWNDQWpDQnRneUJzMUpsYkdsaGJtTmxJRzl1SUhSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnWW5rZ1lXNTVJSEJoY25SNUlHRnpjM1Z0WlhNZ1lXTmpaWEIwWVc1alpTQnZaaUIwYUdVZ2RHaGxiaUJoY0hCc2FXTmhZbXhsSUhOMFlXNWtZWEprSUhSbGNtMXpJR0Z1WkNCamIyNWthWFJwYjI1eklHOW1JSFZ6WlN3Z1kyVnlkR2xtYVdOaGRHVWdjRzlzYVdONUlHRnVaQ0JqWlhKMGFXWnBZMkYwYVc5dUlIQnlZV04wYVdObElITjBZWFJsYldWdWRITXVNRGNHQ0NzR0FRVUZCd0lCRml0b2RIUndjem92TDNkM2R5NWhjSEJzWlM1amIyMHZZMlZ5ZEdsbWFXTmhkR1ZoZFhSb2IzSnBkSGt2TUJZR0ExVWRKUUVCL3dRTU1Bb0dDQ3NHQVFVRkJ3TURNQjBHQTFVZERnUVdCQlRqWjkwR1BJUE9TdFFKMzFLWkJrRWdVZGswd2pBT0JnTlZIUThCQWY4RUJBTUNCNEF3RXdZS0tvWklodmRqWkFZQkJ3RUIvd1FDQlFBd0V3WUtLb1pJaHZkalpBWUJCQUVCL3dRQ0JRQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRW9ESTgzY0JLTU13ZDB1TUFreXJHeGxjRjlLaDBpT2FpRUFQYVUwSHlxeXZHck94dEVhc0ZheEZFMXlUMGk5U2xab25ENVFMeG1xa0laT0tBZmtxTTBBcXNGZjByeGRkcTZ2RkJZekptUUduVEtkR1U5bmRvVllGTTFmQVd5WndwcWZVWmVHdzR1eW9zbHZnT3JFdC8rU2hENWlOZERJOTZsZkd1aVVoNHFHRVVCT1JRekV3WWIxaktNK3ZRU1FhRXFHMDJNbVpKeFU4VDF6SDF2aGZYMVRzZUs0TzRaR0tMckVpOCtJY1NLbUlrZkp6bk8wQ2dOZXNFYzF1Vk94UDVNdUFtd0JiU2h5VmkrTUtHeTRDZlNXYlBtSGtpeVlubUE2ZnNxa3VBY1V3allhMXhCRldtZ0NPbDZPMW1zeWh2a1pDdVZmYWpZQ1pWRFplMU5JbmNzPTwvZGF0YT4KCTwvYXJyYXk+CgoJPGtleT5ERVItRW5jb2RlZC1Qcm9maWxlPC9rZXk+Cgk8ZGF0YT5NSUlOb0FZSktvWklodmNOQVFjQ29JSU5rVENDRFkwQ0FRRXhEekFOQmdsZ2hrZ0JaUU1FQWdFRkFEQ0NBMW9HQ1NxR1NJYjNEUUVIQWFDQ0Ewc0VnZ05ITVlJRFF6QU1EQWRXWlhKemFXOXVBZ0VCTUEwTUNGQlFVVU5vWldOckFRRUFNQkFNQ2xScGJXVlViMHhwZG1VQ0FnRnNNQk1NRGtseldHTnZaR1ZOWVc1aFoyVmtBUUVBTUJjTUNGUmxZVzFPWVcxbERBdHphSFY2YUdrZ2QyRnVaekFhREFsQmNIQkpSRTVoYldVTURXTnZiVlJYVjFvMk56Sk1WMWt3SFF3TVEzSmxZWFJwYjI1RVlYUmxGdzB5TlRBM01ETXdNelEzTlRCYU1CNE1EbFJsWVcxSlpHVnVkR2xtYVdWeU1Bd01DbFJYVjFvMk56Sk1WMWt3SHd3T1JYaHdhWEpoZEdsdmJrUmhkR1VYRFRJMk1EY3dNekF6TXpNME5sb3dJQXdYVUhKdlptbHNaVVJwYzNSeWFXSjFkR2x2YmxSNWNHVU1CVk5VVDFKRk1DRU1DRkJzWVhSbWIzSnRNQlVNQTJsUFV3d0VlSEpQVXd3SWRtbHphVzl1VDFNd0lnd0VUbUZ0WlF3YVkyOXRWRmRYV2pZM01reFhXVjlrYVhOZk1qQXlOVEEzTURJd0t3d2JRWEJ3YkdsallYUnBiMjVKWkdWdWRHbG1hV1Z5VUhKbFptbDRNQXdNQ2xSWFYxbzJOekpNVjFrd0xBd0VWVlZKUkF3a01tSTBZbVF6TVRFdE56RmpOUzAwWTJWbUxUZzVNRE10WkRBeE1UYzNNbVV4WVRjeE1Ec01GVVJsZG1Wc2IzQmxja05sY25ScFptbGpZWFJsY3pBaUJDRHBKOHhaWE9ibGlwVFZwL1hsMjNrWXZlVnFvV2hWVyt6VTEvd0I5L2Rna1RDQ0FXVU1ERVZ1ZEdsMGJHVnRaVzUwYzNDQ0FWTUNBUUd3Z2dGTU1ETU1GbUZ3Y0d4cFkyRjBhVzl1TFdsa1pXNTBhV1pwWlhJTUdWUlhWMW8yTnpKTVYxa3VZMjl0TGxSWFYxbzJOekpNVjFrd0hRd1BZWEJ6TFdWdWRtbHliMjV0Wlc1MERBcHdjbTlrZFdOMGFXOXVNQmdNRTJKbGRHRXRjbVZ3YjNKMGN5MWhZM1JwZG1VQkFmOHdMQXdmWTI5dExtRndjR3hsTG1SbGRtVnNiM0JsY2k1aGNIQnNaWE5wWjI1cGJqQUpEQWRFWldaaGRXeDBNQ3NNSm1OdmJTNWhjSEJzWlM1a1pYWmxiRzl3WlhJdVlYTnpiMk5wWVhSbFpDMWtiMjFoYVc1ekRBRXFNREVNSTJOdmJTNWhjSEJzWlM1a1pYWmxiRzl3WlhJdWRHVmhiUzFwWkdWdWRHbG1hV1Z5REFwVVYxZGFOamN5VEZkWk1CTU1EbWRsZEMxMFlYTnJMV0ZzYkc5M0FRRUFNRGtNRm10bGVXTm9ZV2x1TFdGalkyVnpjeTFuY205MWNITXdId3dNVkZkWFdqWTNNa3hYV1M0cURBOWpiMjB1WVhCd2JHVXVkRzlyWlc2Z2dnZzhNSUlDUXpDQ0FjbWdBd0lCQWdJSUxjWDhpTkxGUzVVd0NnWUlLb1pJemowRUF3TXdaekViTUJrR0ExVUVBd3dTUVhCd2JHVWdVbTl2ZENCRFFTQXRJRWN6TVNZd0pBWURWUVFMREIxQmNIQnNaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVURVRNQkVHQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVMTUFrR0ExVUVCaE1DVlZNd0hoY05NVFF3TkRNd01UZ3hPVEEyV2hjTk16a3dORE13TVRneE9UQTJXakJuTVJzd0dRWURWUVFEREJKQmNIQnNaU0JTYjI5MElFTkJJQzBnUnpNeEpqQWtCZ05WQkFzTUhVRndjR3hsSUVObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUjVNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVFzd0NRWURWUVFHRXdKVlV6QjJNQkFHQnlxR1NNNDlBZ0VHQlN1QkJBQWlBMklBQkpqcEx6MUFjcVR0a3lKeWdSTWMzUkNWOGNXalRuSGNGQmJaRHVXbUJTcDNaSHRmVGpqVHV4eEV0WC8xSDdZeVlsM0o2WVJiVHpCUEVWb0EvVmhZREtYMUR5eE5CMGNUZGRxWGw1ZHZNVnp0SzUxN0lEdll1VlRaWHBta09sRUtNYU5DTUVBd0hRWURWUjBPQkJZRUZMdXczcUZZTTRpYXBJcVozcjY5NjYvYXl5U3JNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01Bb0dDQ3FHU000OUJBTURBMmdBTUdVQ01RQ0Q2Y0hFRmw0YVhUUVkyZTN2OUd3T0FFWkx1Tit5UmhIRkQvM21lb3locG12T3dnUFVuUFdUeG5TNGF0K3FJeFVDTUcxbWloREsxQTNVVDgyTlF6NjBpbU9sTTI3amJkb1h0MlFmeUZNbStZaGlkRGtMRjF2TFVhZ002QmdENTZLeUtEQ0NBdVl3Z2dKdG9BTUNBUUlDQ0RNTjd2aS9UR2d1TUFvR0NDcUdTTTQ5QkFNRE1HY3hHekFaQmdOVkJBTU1Fa0Z3Y0d4bElGSnZiM1FnUTBFZ0xTQkhNekVtTUNRR0ExVUVDd3dkUVhCd2JHVWdRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEhreEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERURTNNREl5TWpJeU1qTXlNbG9YRFRNeU1ESXhPREF3TURBd01Gb3djakVtTUNRR0ExVUVBd3dkUVhCd2JHVWdVM2x6ZEdWdElFbHVkR1ZuY21GMGFXOXVJRU5CSURReEpqQWtCZ05WQkFzTUhVRndjR3hsSUVObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUjVNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVFzd0NRWURWUVFHRXdKVlV6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJBWnJwRlp2Zlo4bjBjNDJqcEliVnMxVU5tUkt5WlJvbWZySklIN2k5VmdQM09KcTZ4bEhMeTd2TzZRQnRBRVRSSHhhSnEyZ25Da2xpdVhtQm05UGZGcWpnZmN3Z2ZRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZkJnTlZIU01FR0RBV2dCUzdzTjZoV0RPSW1xU0ttZDYrdmV1djJzc2txekJHQmdnckJnRUZCUWNCQVFRNk1EZ3dOZ1lJS3dZQkJRVUhNQUdHS21oMGRIQTZMeTl2WTNOd0xtRndjR3hsTG1OdmJTOXZZM053TURNdFlYQndiR1Z5YjI5MFkyRm5NekEzQmdOVkhSOEVNREF1TUN5Z0txQW9oaVpvZEhSd09pOHZZM0pzTG1Gd2NHeGxMbU52YlM5aGNIQnNaWEp2YjNSallXY3pMbU55YkRBZEJnTlZIUTRFRmdRVWVrZTZPSW9WSkVnaVJzMitqeG9rZXpRREtta3dEZ1lEVlIwUEFRSC9CQVFEQWdFR01CQUdDaXFHU0liM1kyUUdBaEVFQWdVQU1Bb0dDQ3FHU000OUJBTURBMmNBTUdRQ01CVU1xWTdHcjVacGE2ZWYzVnpVQTFsc3JsTFVZTWFMZHVDM3hhTHhDWHpnbXVOcnNlTjhNY1FuZXFlT2lmMnJkd0l3WVRNZzhTbi8rWWN5cmluSVpEMTJlMUdrMGdJdmRyNWdJcEh4MVRwMTNMVGl4aXFXL3NZSjNFcFAxU1R3L01xeU1JSURCekNDQXEyZ0F3SUJBZ0lJRjRDb05HWms2c3N3Q2dZSUtvWkl6ajBFQXdJd2NqRW1NQ1FHQTFVRUF3d2RRWEJ3YkdVZ1UzbHpkR1Z0SUVsdWRHVm5jbUYwYVc5dUlFTkJJRFF4SmpBa0JnTlZCQXNNSFVGd2NHeGxJRU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5YVhSNU1STXdFUVlEVlFRS0RBcEJjSEJzWlNCSmJtTXVNUXN3Q1FZRFZRUUdFd0pWVXpBZUZ3MHlOREV4TWpBd016SXdORFZhRncweU9ERXlNVFF4T0RBd016QmFNRTR4S2pBb0JnTlZCQU1NSVZkWFJGSWdVSEp2ZG1semFXOXVhVzVuSUZCeWIyWnBiR1VnVTJsbmJtbHVaekVUTUJFR0ExVUVDZ3dLUVhCd2JHVWdTVzVqTGpFTE1Ba0dBMVVFQmhNQ1ZWTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBVDFsRnNPd2RSVVB4bmVSbUFsWHo2T0tjOXNUNVBWSExkOXRsSmZIK0g3WXdHeWdodW9vVTYwMCszdlZya1gxSmpOWUxmT1RxbTNPbGQyVStnelE2OTlvNElCVHpDQ0FVc3dEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUjZSN280aWhVa1NDSkd6YjZQR2lSN05BTXFhVEJCQmdnckJnRUZCUWNCQVFRMU1ETXdNUVlJS3dZQkJRVUhNQUdHSldoMGRIQTZMeTl2WTNOd0xtRndjR3hsTG1OdmJTOXZZM053TURNdFlYTnBZMkUwTURNd2daWUdBMVVkSUFTQmpqQ0JpekNCaUFZSktvWklodmRqWkFVQk1Ic3dlUVlJS3dZQkJRVUhBZ0l3YlF4clZHaHBjeUJqWlhKMGFXWnBZMkYwWlNCcGN5QjBieUJpWlNCMWMyVmtJR1Y0WTJ4MWMybDJaV3g1SUdadmNpQm1kVzVqZEdsdmJuTWdhVzUwWlhKdVlXd2dkRzhnUVhCd2JHVWdVSEp2WkhWamRITWdZVzVrTDI5eUlFRndjR3hsSUhCeWIyTmxjM05sY3k0d0hRWURWUjBPQkJZRUZPbFN6ZzJ3eG9nYVpVcTRteEdQOGR3ZVJ4UjhNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVBCZ2txaGtpRzkyTmtEQk1FQWdVQU1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRHZtcnhkb0ZwbWJHUzV6VGVUcVZPME44WEhiT0dEK2hjYTNnczkxcXRvWmdJZ2VDUFp3NGdIU1QzMSs0bVBrRzVZNEZlZlkvOVk0ZGFQWEpoajFqbytQNTB4Z2dIWE1JSUIwd0lCQVRCK01ISXhKakFrQmdOVkJBTU1IVUZ3Y0d4bElGTjVjM1JsYlNCSmJuUmxaM0poZEdsdmJpQkRRU0EwTVNZd0pBWURWUVFMREIxQmNIQnNaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVURVRNQkVHQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVMTUFrR0ExVUVCaE1DVlZNQ0NCZUFxRFJtWk9yTE1BMEdDV0NHU0FGbEF3UUNBUVVBb0lIcE1CZ0dDU3FHU0liM0RRRUpBekVMQmdrcWhraUc5dzBCQndFd0hBWUpLb1pJaHZjTkFRa0ZNUThYRFRJMU1EY3dNekF6TkRjMU1Gb3dLZ1lKS29aSWh2Y05BUWswTVIwd0d6QU5CZ2xnaGtnQlpRTUVBZ0VGQUtFS0JnZ3Foa2pPUFFRREFqQXZCZ2txaGtpRzl3MEJDUVF4SWdRZzdEeWhtRDJGUkZtbUsvcU93MUxFWVJrb1FSR3lyWU9Ec3pIT0xjR3MwamN3VWdZSktvWklodmNOQVFrUE1VVXdRekFLQmdncWhraUc5dzBEQnpBT0JnZ3Foa2lHOXcwREFnSUNBSUF3RFFZSUtvWklodmNOQXdJQ0FVQXdCd1lGS3c0REFnY3dEUVlJS29aSWh2Y05Bd0lDQVNnd0NnWUlLb1pJemowRUF3SUVSekJGQWlBdGhIOGFPcnNYamNsSmNPMG5VYVJaeG15Yko2Mm95TGx1V1k3SEZwOXZiQUloQVBRMHhYWXFZbS9xTGxiKzQzK09Wa1FIRGhjTTJtVm13cmw4aFFtUVNQUUw8L2RhdGE+CgkJCQkJCQkJCQkJCQkJCQkJCQoJCQk8a2V5PlBQUUNoZWNrPC9rZXk+Cgk8ZmFsc2UvPgoKCTxrZXk+RW50aXRsZW1lbnRzPC9rZXk+Cgk8ZGljdD4KCQk8a2V5PmJldGEtcmVwb3J0cy1hY3RpdmU8L2tleT4KCQk8dHJ1ZS8+CgkJCQkKCQkJCTxrZXk+YXBzLWVudmlyb25tZW50PC9rZXk+CgkJPHN0cmluZz5wcm9kdWN0aW9uPC9zdHJpbmc+CgkJCQkKCQkJCTxrZXk+Y29tLmFwcGxlLmRldmVsb3Blci5hc3NvY2lhdGVkLWRvbWFpbnM8L2tleT4KCQk8c3RyaW5nPio8L3N0cmluZz4KCQkJCQoJCQkJPGtleT5hcHBsaWNhdGlvbi1pZGVudGlmaWVyPC9rZXk+CgkJPHN0cmluZz5UV1daNjcyTFdZLmNvbS5UV1daNjcyTFdZPC9zdHJpbmc+CgkJCQkKCQkJCTxrZXk+a2V5Y2hhaW4tYWNjZXNzLWdyb3Vwczwva2V5PgoJCTxhcnJheT4KCQkJCTxzdHJpbmc+VFdXWjY3MkxXWS4qPC9zdHJpbmc+CgkJCQk8c3RyaW5nPmNvbS5hcHBsZS50b2tlbjwvc3RyaW5nPgoJCTwvYXJyYXk+CgkJCQkKCQkJCTxrZXk+Z2V0LXRhc2stYWxsb3c8L2tleT4KCQk8ZmFsc2UvPgoJCQkJCgkJCQk8a2V5PmNvbS5hcHBsZS5kZXZlbG9wZXIudGVhbS1pZGVudGlmaWVyPC9rZXk+CgkJPHN0cmluZz5UV1daNjcyTFdZPC9zdHJpbmc+CgkJCQkKCQkJCTxrZXk+Y29tLmFwcGxlLmRldmVsb3Blci5hcHBsZXNpZ25pbjwva2V5PgoJCTxhcnJheT4KCQkJCTxzdHJpbmc+RGVmYXVsdDwvc3RyaW5nPgoJCTwvYXJyYXk+CgkJCgk8L2RpY3Q+Cgk8a2V5PkV4cGlyYXRpb25EYXRl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


          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/weeva.ipa"
          APPLE_ID: "wangshuzhi@yukincontech.shop"
          APP_SPECIFIC_PASSWORD: "ghux-goit-nsol-xpqa"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
